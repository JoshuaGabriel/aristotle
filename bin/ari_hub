#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2019 Michael D. Adams
# All rights reserved.
# 
# This file is part of the Aristotle software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

cmd_dir=$(dirname "$0") || exit 1
source "$cmd_dir/utilities" || exit 1

ari_gc_getcred="$cmd_dir/ari_gc_getcred"

debug_level="${ARI_DEBUG_LEVEL:-0}"

github_host_name=github.com

hub_program=hub

if [ "$debug_level" -ge 10 ]; then
	set -xv
fi

gc_user=$("$ari_gc_getcred" -k username) || gc_user=
gc_token=$("$ari_gc_getcred" -k token) || gc_token=

gc_git_proto=$("$ari_gc_getcred" -k gc_git_protocol) || \
  panic "cannot get GitHub Git protocol"
gc_host=$("$ari_gc_getcred" -k hostname) || \
  panic "cannot get GitHub hostname"

if [ -n "$gc_user" -a -n "$gc_token" ]; then
	export GITHUB_USER="$gc_user"
	export GITHUB_TOKEN="$gc_token"
elif [ -n "$gc_token" ]; then
	export GITHUB_TOKEN="$gc_token"
else
	panic "no available authentication method"
fi

if [ "$debug_level" -ge 1 ]; then
	export HUB_VERBOSE=1
fi

export HUB_PROTOCOL="$gc_git_proto"
# Note:
# The hub program seems to require that the Git remote have the hostname
# github.com, even if the ssh program would map some other name to
# github.com.  Consequently, the following (commented out) line does not
# seem to work:
# export GITHUB_HOST="$gc_host"
export GITHUB_HOST="$github_host_name"
if [ "$gc_host" != "$github_host_name" ]; then
	eecho "WARNING: hub only seems to support a GitHub hostname of $github_host_name"
	eecho "WARNING: ignoring requested GitHub hostname $gc_host"
	eecho "WARNING: instead using GitHub hostname $github_host_name"
fi
if [ "$debug_level" -ge 1 ]; then
	eecho "GITHUB_VERBOSE=$GITHUB_VERBOSE"
	eecho "HUB_PROTOCOL=$HUB_PROTOCOL"
	eecho "GITHUB_HOST=$GITHUB_HOST"
	eecho "GITHUB_USER=$GITHUB_USER"
	eecho "GITHUB_TOKEN=$GITHUB_TOKEN"
	eecho "Running: $hub_program $@"
fi
exec "$hub_program" "$@"
