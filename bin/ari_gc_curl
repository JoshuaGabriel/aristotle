# /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017 Michael D. Adams
# All rights reserved.
# 
# This file is part of the Aristotle software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

cmd_dir=$(dirname "$0") || exit 1
source "$cmd_dir/utilities" || exit 1

usage()
{
	if [ $# -gt 0 ]; then
		echo "$@" 1>&2
	fi
	cat <<- EOF
	$(basename $0)
	Front-end to the curl program.

	Usage
	=====

	$0 [options]

	Options
	=======

	-D debug_level
	    Set the debug level to debug_level.
	EOF
	exit 2
}

ari_gc_getcred="$cmd_dir/ari_gc_getcred"

debug_level=${ARI_DEBUG_LEVEL:-0}

while getopts D:- option; do
	case "$option" in
	D)
		debug_level="$OPTARG";;
	-)
		break;;
	*)
		usage "invalid option $option";;
	esac
done
shift $((OPTIND - 1))

if [ "$debug_level" -ge 1 ]; then
	set -xv
fi

gc_token=$("$ari_gc_getcred" -k token 2> /dev/null) || gc_token=
gc_username=$("$ari_gc_getcred" -k username 2> /dev/null) || gc_username=

if [ -z "$gc_token" -a -z "$gc_username" ]; then
	panic "cannot determine GitHub Classroom credentials"
fi

enable_version_check=0
if [ "$enable_version_check" -ne 0 ]; then
	curl_min_version="7.55.0"
	curl_version=$(curl --version | awk '(NR == 1) {print $2;}') || \
	  panic "cannot get curl version"
	if [ "$debug_level" -ge 1 ]; then
		echo "curl version $curl_version"
	fi
	compare_result=$(compare_versions "$curl_version" "$curl_min_version") || \
	  panic "cannot compare versions"
	if [ "$compare_result" -ge 0 ]; then
		has_header_from_file=1
	else
		has_header_from_file=0
	fi
else
	has_header_from_file=0
fi

if [ "$debug_level" -ge 1 ]; then
	eecho "username $gc_username"
	eecho "token $gc_token"
fi

# Note: Do not allow the token appear as a command-line argument.
if [ "$has_header_from_file" -ne 0 ]; then
	curl -s -H @- <<< "Authorization: token $gc_token" "$@"
else
	curl -K - -s <<< "-H \"Authorization: token $gc_token\"" "$@"
fi
