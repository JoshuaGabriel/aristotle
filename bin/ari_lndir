#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017 Michael D. Adams
# All rights reserved.
# 
# This file is part of the Aristotle software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

cmd_dir=$(dirname "$0") || exit 1
source "$cmd_dir/utilities" || exit 1

panic()
{
	echo "ERROR: $@" 1>&2
	exit 1
}

usage()
{
	if [ $# -gt 0 ]; then
		echo "$@" 1>&2
	fi
	cat <<- EOF
	Usage
	=====

	$0 [options] from_dir [to_dir]
	to_dir defaults to the current working directory

	Options
	=======

	-D debug_level
	    Set the debug level to debug_level.
	-n
	    Only print what would be done without doing it.
	-v
	    Increase the verbosity level.
	EOF
	exit 2
}

ari_lndir_helper="$cmd_dir/ari_lndir_helper"

debug_level=${ARI_DEBUG_LEVEL:-0}
verbose=0
just_print=0
while getopts nvD: option; do
	case "$option" in
	D)
		debug_level="$OPTARG";;
	n)
		just_print=1;;
	v)
		verbose=$((verbose + 1));;
	*)
		usage "invalid option $option";;
	esac
done
shift $((OPTIND - 1))

if [ $# -ge 1 ]; then
	from_dir="$1"
	if [ $# -ge 2 ]; then
		if [ $# -gt 2 ]; then
			panic "too many arguments"
		fi
		to_dir="$2"
	else
		to_dir=.
	fi
else
	usage "too few arguments"
fi

if [ ! -d "$to_dir" ]; then
	usage "destination is not a directory"
fi

if [ "$verbose" -ge 1 ]; then
	echo "from $from_dir"
	echo "to $to_dir"
fi

if [ ! -d "$to_dir" ]; then
	panic "destination is not a direction"
fi

# We must perform this check after changing the current working directory,
# since src_root_dir is interpreted relative to dst_root_dir.
cd "$to_dir" || panic
if [ ! -d "$from_dir" ]; then
	panic "source is not a directory $from_dir"
fi

"$ari_lndir_helper" -s "$from_dir" -d "."
